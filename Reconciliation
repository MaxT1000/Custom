function emailReconcilation() {
  var ss = SpreadsheetApp.getActive();
  var sheet = ss.getSheetByName("Billing");
  var ownurl = ss.getUrl();
  var EMAIL_SENT = "EMAIL_SENT";
  var startRow = 2;
  var startCol = 33;

  // Отримання останнього рядка аркуша
  var lr = sheet.getLastRow();

  // Отримання даних з аркуша
  var dataRange = sheet.getRange(startRow, startCol, lr - startRow + 1, 7).getValues();

  // Обчислення кількості рядків з даними
  var lastRow = dataRange[0].filter(String).length;

  // Отримання даних для відправки
  var data = sheet.getRange(startRow, startCol, lastRow, 5).getValues();
  var recipients = [];
  var ccRecipients = ['email1',
                      'email12',
                      'email13',
                      'email14',
                      'email15'];
  var subject = data[0][1].replace("Initial PLAN", "Reconciliation");
  var message = "  У вкладені звірка, яку ми погодили з партнерами. Прошу підготувати документи.";
  var emailSentColumn = startCol + 5;
  var dateSentColumn = startCol + 6;

  // Цикл для підготовки списку отримувачів
  for (var row of data) {
    var emailAddress = row[0];
    var emailSent = row[emailSentColumn];

    // Перевірка, чи лист не був вже відправлений
    if (emailSent !== EMAIL_SENT) {
      recipients.push(emailAddress);
    }
  }

  if (recipients.length > 0) {
    // Формування тіла листа
    var emailBody = 'Колеги, всім привіт! <br>' + message.replace(/\n/g, '<br>') + '<br> За цим посиланням можна знайти сам файл-звірку: <br>' + ownurl;

    try {
      // Відправка одного листа всім отримувачам
      MailApp.sendEmail({
        to: recipients.join(','),
        cc: ccRecipients.join(','), // Вказані адреси отримають копії
        subject: subject,
        htmlBody: emailBody
      });

      var dateEmails = Utilities.formatDate(new Date(), "GMT+2", "yyyy-MM-dd HH:mm");
      var valuesToWrite = [];

      // Підготовка даних для оновлення аркуша
      for (var i = 0; i < recipients.length; i++) {
        valuesToWrite.push([EMAIL_SENT, dateEmails]);
      }

      // Оновлення аркуша з позначками про відправку
      var rangeToWrite = sheet.getRange(startRow, emailSentColumn, recipients.length, 2);
      rangeToWrite.setValues(valuesToWrite);
      // Забезпечення оновлення комірок негайно в разі переривання скрипта
      SpreadsheetApp.flush();
    } catch (e) {
      // Обробка помилки, якщо лист не може бути відправлений
      Logger.log("Помилка під час відправки листів: " + e);
    }
  }

  // Повернення кількості відправлених листів
  return recipients.length;
}
